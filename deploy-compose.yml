services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.multi
      target: api-build
    image: api-build
    container_name: ai.enric.chat.api
    ports:
      - 3080:3080
    depends_on:
      - mongodb
      - rag_api
    extra_hosts:
    - "host.docker.internal:host-gateway"
    restart: always
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/LibreChat
      - MEILI_HOST=http://meilisearch:7700
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}
    volumes:
      - type: bind
        source: ./librechat.yaml
        target: /app/librechat.yaml
      - ./images:/app/client/public/images
      - ./uploads:/app/uploads
      - ./logs:/app/api/logs
    labels:
      com.datadoghq.ad.logs: '[{
        "source": "ai.enric.chat",
        "service": "ai.enric.chat.api",
        "tags": [
          "env:production"
        ]
      }]'
  client:
    image: nginx:1.27.0-alpine
    container_name: ai.enric.chat.client
    ports:
      - 80:80
    depends_on:
      - api
    restart: always
    volumes:
      - ./client/nginx.conf:/etc/nginx/conf.d/default.conf
    labels:
      com.datadoghq.ad.logs: '[{
        "source": "ai.enric.chat",
        "service": "ai.enric.chat.client",
        "tags": [
          "env:production"
        ]
      }]'
  mongodb:
    container_name: ai.enric.chat.mongodb
    # ports:  # Uncomment this to access mongodb from outside docker, not safe in deployment
    #   - 27018:27017
    image: mongo
    restart: always
    volumes:
      - ./data-node:/data/db
    command: mongod --noauth
    labels:
      com.datadoghq.ad.logs: '[{
        "source": "ai.enric.chat",
        "service": "ai.enric.chat.mongodb",
        "tags": [
          "env:production"
        ]
      }]'
  meilisearch:
    container_name: ai.enric.chat.meilisearch
    image: getmeili/meilisearch:v1.12.3
    restart: always
    # ports: # Uncomment this to access meilisearch from outside docker
    #   - 7700:7700 # if exposing these ports, make sure your master key is not the default value
    env_file:
      - .env
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
    volumes:
      - ./meili_data_v1.12:/meili_data
    labels:
      com.datadoghq.ad.logs: '[{
        "source": "ai.enric.chat",
        "service": "ai.enric.chat.meilisearch",
        "tags": [
          "env:production"
        ]
      }]'
  vectordb:
    container_name: ai.enric.chat.pgvector
    image: ankane/pgvector:latest
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - pgdata2:/var/lib/postgresql/data
    labels:
      com.datadoghq.ad.logs: '[{
        "source": "ai.enric.chat",
        "service": "ai.enric.chat.pgvector",
        "tags": [
          "env:production"
        ]
      }]'
    # ports:
    #   - 5432:5432
  rag_api:
    container_name: ai.enric.chat.rag-api
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    restart: always
    env_file:
      - .env
    environment:
      - DB_HOST=vectordb
      - DB_PORT=${DB_PORT:-5432}
      - RAG_PORT=${RAG_PORT:-8000}
    depends_on:
      - vectordb
    labels:
      com.datadoghq.ad.logs: '[{
        "source": "ai.enric.chat",
        "service": "ai.enric.chat.ragapi",
        "tags": [
          "env:production"
        ]
      }]'
    # ports:
    #   - 8000:8000
  datadog:
    container_name: datadog-agent
    image: gcr.io/datadoghq/agent:latest
    environment:
      - DD_LOGS_ENABLED=true
      - DD_API_KEY
      - DD_SITE
      - DD_APM_ENABLED=${DD_APM_ENABLED:-true}
      - DD_APM_NON_LOCAL_TRAFFIC=${DD_APM_NON_LOCAL_TRAFFIC:-true}
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=${DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL:-true}
      - DD_CONTAINER_EXCLUDE="name:agent"
    restart: always
    depends_on:
      - rag_api
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
      - ./logs:/app/api/logs
    security_opt:
      - apparmor:unconfined

volumes:
  pgdata2:
